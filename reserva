async function obterViagens() {
  try {
    return await Viagem.find();
  } catch (error) {
    console.error("Erro ao buscar viagens:", error);
    throw new Error("Não foi possível obter as viagens");
  }
}


























//==========================================================================================================================

const express = require("express");
const path = require("path");
const mongoose = require("mongoose");
const bcrypt = require('bcrypt');
const dbTemp = require('../models/dbTemp.js');
const { Usuario, Viagem, Hotel, Compras } = require("../models/models.js");

const app = express();
const port = 3000;

app.use(express.json());

//==============================================================================//
//                              REQUISIÇÕES CADASTRO
//==============================================================================//

app.post("/registro", async (req, res) => {
    try {
        const saltRounds = 10;
        const hashedSenha = await bcrypt.hash(req.body.senha, saltRounds);

        const novoUsuario = new Usuario({
            nome: req.body.nome,
            email: req.body.email,
            senha: hashedSenha
        });
        await novoUsuario.save();

        const novoHistoricoDeCompras = new Compras({
            usuarioId: novoUsuario._id,
        });
        await novoHistoricoDeCompras.save();

        req.session.userId = novoUsuario._id;

        return res.status(201).send({ usuario: novoUsuario, historicoDeCompras: novoHistoricoDeCompras });
    } catch (error) {
        res.status(500).send({ message: 'Registro não concluido', error });
    }
});

//login
app.post("/login", async (req, res) => {
    try {
        const { email, senha } = req.body;

        //email
        const usuario = await Usuario.findOne({ email });
        if (!usuario) {
            return res.status(400).send({ message: 'E-mail ou senha incorretos' });
        }

        //senha
        const senhaValida = await bcrypt.compare(senha, usuario.senha);
        if (!senhaValida) {
            return res.status(400).send({ message: 'E-mail ou senha incorretos' });
        }
        req.session.userId = usuario._id;

        return res.status(200).send({ message: 'Login bem-sucedido' });
    } catch (error) {
        res.status(500).send({ message: 'Erro no login', error });
    }
});

app.get("/usuarios", async (req, res) => {
    try {
        const usuarios = await Usuario.find().populate({
            path: 'historicoDeCompras',
            model: Compras
        });

        return res.status(200).send(usuarios);
    } catch (error) {
        res.status(500).send({ message: 'Erro ao obter os Usuarios', error });
    }
});

app.delete("/usuarios/:id", async (req, res) => {
    try{
        const usuarios = await Usuario.findByIdAndDelete(req.params.id);
        if (!usuarios) {
            return res.status(404).send({ message: 'Usuario não encontrada' });
        }
        return res.status(200).send({ message: 'Usuario excluido com sucesso', usuarios });
    } catch (error) {
        res.status(400).send({ message: 'Erro ao excluir o usuario', error });
    }
});


//==============================================================================================================





















async function comprarViagem(viagemId) {
    try {
      const response = await fetch("/login");
      if (!response.ok) {
        alert("Você precisa estar logado para comprar uma viagem. Redirecionando para a página de login.");
        window.location.href = "login.html";
        return;
      }
      window.location.href = `/index/hotel?viagemId=${viagemId}`;
    } catch (error) {
      alert("Erro ao verificar seu estado de login. Tente novamente mais tarde.");
    }
  }


  //===========================================================================================================


















































  app.get("/hotel/:viagemId", async (req, res) => {
    try {
      const { viagemId } = req.query;
      if (!viagemId) {
        return res.status(400).json({ message: "viagemId é necessário" });
      }
  
      const viagem = await Viagem.findById(viagemId);
  
      if (!viagem) {
        return res.status(404).json({ message: "Viagem não encontrada" });
      }
  
      res.json(viagem.hoteis);
    } catch (error) {
      res.status(500).json({ message: "Erro ao buscar hotéis", error });
    }
  });
  
  async function carregarHoteis(viagemId) {
    try {
      const response = await fetch(`http://localhost:3000/hotel/:viagemId`);
      if (!response.ok) {
        throw new Error("Erro ao obter os hoteis");
      }
      const hoteis = await response.json();
      exibirHoteis(hoteis);
    } catch (error) {
      console.error("Erro ao carregar hotéis:", error);
      alert("Erro ao carregar hotéis.");
    }
  }
  
  function exibirHoteis(hoteis) {
    const container = document.getElementById("hoteis-container");
    container.innerHTML = ""; // Limpar conteúdo anterior
    
    hoteis.forEach((hotel) => {
      const hotelDiv = document.createElement("div");
      hotelDiv.className = "hotel";
  
      hotelDiv.innerHTML = `
        <h2>${hotel.nomeHotel}</h2>
        <p>Valor: R$ ${hotel.valorHotel}</p>
        <img src="${hotel.imagemHotel}" alt="${hotel.nomeHotel}" class="imagem">
      `;
      container.appendChild(hotelDiv);
    });
  }
  












//============================================================================================








































<script>
      function getViagemIdFromURL() {
        const params = new URLSearchParams(window.location.search);
        return params.get("viagemId");
      }
    
      async function carregarHoteis() {
        const viagemId = getViagemIdFromURL();
        try {
          const response = await fetch(`http://localhost:3000/hoteis/${viagemId}`);
          if (!response.ok) {
            throw new Error("Erro ao obter os Hoteis");
          }
          const hoteis = await response.json();
          exibirHoteis(hoteis, viagemId); // Exibe os hotéis com o ID da viagem
        } catch (error) {
          console.error("Erro", error);
          alert("Erro ao carregar os hotéis.");
        }
      }
    
      function exibirHoteis(hoteis, viagemId) {
        const container = document.getElementById("hoteis-container");
        container.innerHTML = "";
        hoteis.forEach((hotel) => {
          const hotelDiv = document.createElement("div");
          hotelDiv.className = "hotel";
    
          hotelDiv.innerHTML = `
            <h3>${hotel.nomeHotel}</h3>
            <p>Valor da diária: R$ ${hotel.valorHotel}</p>
            <img src="${hotel.imagemHotel}" alt="${hotel.nomeHotel}" class="imagem-hotel">

          `;
          container.appendChild(hotelDiv);
        });
      }
      carregarHoteis();

    </script>